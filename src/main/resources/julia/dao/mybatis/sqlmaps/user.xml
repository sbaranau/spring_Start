<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="julia.dao.UserDao">

	<!-- templates -->
	<sql id="readTemplate">
		SELECT *
		FROM ${db.schema}.users u
	</sql>

	<!-- queries -->

	<insert id="create" parameterType="user" keyProperty="id">
		INSERT INTO
		${db.schema}.users (
		login,
		password,
		name,
		surname,
		middle_name,
		phone,
		email
	)
		VALUES (
		#{login},
		#{password},
		#{name},
		#{surname},
		#{middleName},
		#{phone},
		#{email}
		)
	</insert>

	<select id="read" resultType="user" parameterType="long">
		<include refid="readTemplate" />
		WHERE u.id = #{id}
	</select>

	<update id="update" parameterType="user">
		UPDATE ${db.schema}.users SET
		login = #{login},
		password = #{password},
		name = #{name},
		surname =
		#{surname},
		middle_name = #{middleName},
		phone =
		#{phone},
		email =
		#{email}
			WHERE id
		= #{id}
	</update>

	<delete id="delete" parameterType="long">
		DELETE FROM ${db.schema}.users
		WHERE id = #{id}
	</delete>

	<select id="findAll" resultType="user">
		<include refid="readTemplate" />
		ORDER BY u.id
	</select>


	<select id="findGroupsIds" parameterType="long" resultType="long">
		SELECT
		group_id
		FROM
		${db.schema}.user_groups
		WHERE
		user_id = #{id}
	</select>

	<select id="loginExists" parameterType="string" resultType="boolean">
		SELECT CASE WHEN EXISTS (SELECT id FROM ${db.schema}.users WHERE login
		= #{login})
		THEN
		TRUE
		ELSE
		FALSE
		END
	</select>




	<update id="changePassword">
		UPDATE ${db.schema}.users SET password = #{password}
		WHERE id = #{id}
	</update>

	<select id="findByPhone" resultType="user" parameterType="String">
		SELECT
		*
		FROM
		${db.schema}.users
		WHERE
		phone=#{phone}
	</select>

	<select id="findByEmail" resultType="user" parameterType="String">
		SELECT
		*
		FROM
		${db.schema}.users
		WHERE
		email=#{email}
	</select>



  <select id="findByFullNameAndDateBirth" resultType="user">
        <include refid="readTemplate" />
        <where>
            <if test="name != null">
                name = #{name}
            </if>
            <if test="surname != null">
                AND surname = #{surname}
            </if>
            <if test="middleName != null">
                AND middle_name = #{middleName}
            </if>

        </where>
    </select>

	<select id="findAllUserDTO" resultType="julia.dto.users.UserDTO" parameterType="julia.web.mvc.SearchUsersFilter">
		SELECT
		  u.id                                               AS userId,
		  u.surname || ' ' || u.name || ' ' || u.middle_name AS fullName,
		  u.phone                                            AS phone,
		  u.login
		FROM  ${db.schema}.users u
		  WHERE
		  	 (u.surname || ' ' || u.name || ' ' || u.middle_name) ILIKE ('%' || #{searchString} || '%')
		ORDER BY fullName ASC OFFSET #{offset};
	</select>

	<select id="findUserDTO" resultType="julia.dto.users.UserDTO" parameterType="long">
		SELECT
		  u.id                                               AS userId,
		  u.surname || ' ' || u.name || ' ' || u.middle_name AS fullName,
		  u.phone                                            AS photoId,
		  u.login
		FROM ${db.schema}.users u
		  WHERE
		  	u.id = #{userId}
	</select>
	<select id="findAllRolesByUserId" resultType="java.lang.String">
		SELECT r.name
		FROM ${db.schema}.users u
			LEFT JOIN ${db.schema}.user_roles ur  on ur.user_id=u.id
			LEFT JOIN ${db.schema}.roles r on ur.role_id=r.id
		where u.id=#{userId}
	</select>

</mapper>
